# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2021 Intel Corporation

---
- name: install dependencies
  include_role:
    name: infrastructure/install_dependencies

- name: install elrepo repository
  include_tasks: setup_repository.yml

- name: remove kernel-headers package before kernel-ml-headers installation
  package:
    name:
      - kernel-headers
    disable_excludes: main
    state: absent
  become: yes

- name: install kernel-ml packages
  package:
    name:
      - kernel-ml
      - kernel-ml-devel
    disablerepo: '*'
    enablerepo: elrepo-kernel
    disable_excludes: main
  become: yes
  notify:
    - reboot server

- name: install kernel-ml-headers package
  package:
    name:
      - kernel-ml-headers
    disablerepo: '*'
    enablerepo: elrepo-kernel
    disable_excludes: main
  become: yes

- name: install dependencies
  include_role:
    name: infrastructure/install_dependencies
  vars:
    install_dependencies: "{{ post_install_dependencies }}"

- name: get mainline kernel version
  shell: set -o pipefail && yum --disableexcludes=main list installed --disablerepo='*' --enablerepo=elrepo-kernel | grep "kernel-ml.x86_64" | \
           awk '{ print $2".x86_64"}'
  args:
    warn: false
  register: ml_kernel_version
  changed_when: false

- name: get booted kernel version
  command: uname -r
  register: booted_kernel_version
  changed_when: false

- name: update grub
  include_role:
    name: infrastructure/update_grub
  when:
    - booted_kernel_version.stdout not in ml_kernel_version.stdout

- name: get saved kernel for next boot
  shell: set -o pipefail && grub2-editenv list | grep saved_entry | cut -f2 -d'='
  register: saved_kernel_entry
  become: yes
  changed_when: false

- name: set grub2 config name
  shell: "[ -d /sys/firmware/efi ] && echo '/etc/grub2-efi.cfg' || echo '/etc/grub2.cfg'"
  register: grub2_config_name
  changed_when: false

- name: select menuentry from grub
  shell:
    cmd: set -o pipefail &&
         grep ^menuentry "{{ grub2_config_name.stdout }}" |
         cut -d "'" -f2 |
         grep {{ ml_kernel_version.stdout }}
  register: menu_entry
  become: yes
  changed_when: false

- name: set default kernel when menuentry is not available
  command: grubby --set-default /boot/vmlinuz-{{ ml_kernel_version.stdout }}
  become: yes
  changed_when: true
  when:
    - menu_entry.stdout | length == 0

- name: set default kernel for next boot
  command: grub2-set-default "{{ menu_entry.stdout }}"
  notify:
    - reboot server
  become: yes
  when:
    - menu_entry.stdout | length > 0
    - saved_kernel_entry.stdout not in menu_entry.stdout

- name: verify grub2 default entry
  command: grub2-editenv list
  become: yes
  changed_when: false
